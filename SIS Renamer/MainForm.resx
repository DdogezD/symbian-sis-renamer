<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAcADYCKgJyCTwLoA1JDsIPURHbEFYS6g5X
        E/QPXBT2D1wT9g5aFvMQVhLqD08R2g1JDsIJPAugAioCcQAcADYAAAADAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAFQUuBYQOUBPkGG8f/x+GKP8gjir/IZAr/yGR
        K/8hkSv/IZEr/yGRK/8hkSv/IZEr/yGRK/8hkSv/IZAr/yCOKv8fhij/GHAf/w5QE+QFLgWDAAwAFQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIhAlwSVxXtH4Yo/yGRK/8hkSv/IZEr/yGR
        K/8hkSv/IZEr/yGRK/8hkSv/IZEr/yGRK/8hkSv/IZEr/yGRK/8hkSv/IZEr/yGRK/8hkSv/IZEr/x+G
        KP8SVxXtAiECWwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEJwZ8G3Ih/iGRK/8hkSv/IJIq/yCS
        K/8gkyv/IJMr/yCTK/8gkyv/IJMr/yCRKv8ceST/G3gk/x2HJ/8gkiv/IJMr/yCTK/8gkyv/IJEq/x2A
        Jv8cdyT/HYEm/yGRK/8bciH+BCcGfAAAAAAAAAAAAAAAAAAAAAAAAAAAAhwCWRxxIv4hkiv/IJIr/yCT
        K/8gkyz/IJMs/yCTLP8gkyz/IJMs/yCTLP8gkyz/qs+u/+/v7//q6ur/x8jH/3+Ugf8lbiz/KpE0/36t
        g//CysP/5+fn/+/v7/+xtLH/HXkm/yGSK/8ccSL+AhwCWQAAAAAAAAAAAAAAAAAOABITUhXrIZIr/yCT
        LP8gkyz/IJMs/yCTLP8gkyz/IJMs/yCTLP8gkyz/IJMs/yeWM//6/fr//////////////////////+fn
        5//g4+H///////////////////////7+/v8wgDj/IJMs/yGSK/8TUhXrAA4AEgAAAAAAAAAABiIGfiOK
        K/8fkyz/H5Qs/x+ULP8flCz/H5Qs/x+ULP8flCz/H5Qs/x+ULP8flCz/H5Qs/4LDif/Q6dP/6fXr//7+
        /v///////////////////////v7+/+z27f/T6tb/jcWT/x+TLP8flCz/H5Ms/yOKK/8GIgZ9AAAAAAAA
        AAITSxjfIZIr/x+ULP8flCz/H5Qs/x+ULP8flCz/H5Qs/x+ULP8flCz/H5Qs/x+ULP8flCz/H5Qs/x+U
        LP8glS3/RKZP/9Lp1P///////////9zm3f9MqVf/IZUu/x+ULP8flCz/H5Qs/x+ULP8flCz/IZIr/xNK
        GN4AAAACAAsALh5wI/8fkyv/HpQr/x6UK/8elCz/HpQs/x6UK/8elCz/HpQs/x6UK/8elCz/HpQs/x6U
        K/8elCz/HpQs/x6ULP8elCz/cbt5////////////hKWI/x6UK/8elCz/HpQs/x6ULP8elCz/HpQs/x6U
        LP8fkyv/HnAk/wALAC4CFQRqJowu/x+TK/8elCz/HpQs/x6ULP8elCz/HpQs/x6ULP8elCz/HpQs/x6U
        LP8elCz/HpQs/x6ULP8elCz/HpQs/x6ULP9wu3n///////////9/oYP/HpQs/x6ULP8elCz/HpQs/x6U
        LP8elCz/HpQs/x+TK/8mjC7/AhUEaQ0vD5cllC//I5Uv/2Sea/9tmXL/b5l0/3Cadf9xmnX/cZp2/3Kb
        d/9ymnf/c5t3/3Sbef90m3n/dJt5/3Wcev9Zgl7/HpMs/3C7ef///////////7O+tP91nHr/dZx6/3Wc
        ev9ymnf/UYBX/xyKKf8elCz/H5Mr/yWUL/8NLw+XFEMXuSOULv9esWf/////////////////////////
        /////////////////////////////////////////////7u/vP8dkiv/b7t5////////////////////
        ///////////////////6+vr/IHMr/x2ULP8fkyz/I5Qu/xRDF7kZTBnSIZQt/2K0a///////ws/D/4LE
        iv+CxIr/gMSJ/4DEif+Aw4j/f8OI/3/DiP9/w4f/fsKG/37Chv9+wob/YrBs/x2VLP9vvHn/////////
        //+2ybj/fsKH/4DDiP+BxIn/5fPn//7+/v8meDH/HZUs/x6ULP8hlC3/GEoc0RtQHeEflC3/Y7Vs////
        //+QqZP/HJUs/xyVLP8clSz/HJUs/xyVLP8clSz/HJUs/xyVLP8clSz/HJUs/xyVLP8clSz/HJUs/2+8
        ef///////////3+hg/8clSz/HJUs/xyVLP/Q6dP//v7+/yd5Mf8clSz/HpQs/x+ULf8bUB3hG1Md6B6V
        Lf9itW3//////5Cpk/8clS3/a7B1/6i0qv+otKr/qLSq/6i0qv+otKr/qLSq/6i0qv+UoJX/GYQo/xyV
        Lf8clS3/b7x5////////////f6GD/xyVLf8clS3/HJUt/9Dp0//+/v7/J3ky/xyVLf8dlSz/HpUt/xtT
        HegbVB7oHZUt/2O2bv//////kKmT/xuVLf+Z0KH//////////////////////////////////////9/f
        3/8Ygif/G5Ut/xuVLf9uvHn///////////9+oYP/G5Ut/xuVLf8blS3/z+nT//7+/v8meTL/G5Ut/xyV
        LP8dlS3/Glch5x5VIuUdlS3/Y7Zv//////+QqZP/G5Yt/5nQof//////////////////////////////
        ////////39/f/xiDJ/8bli3/G5Yt/268ef///////////36hg/8bli3/G5Yt/xuWLf/P6dP//v7+/yZ5
        Mv8blS3/HJUt/x2VLf8eVSLlHFYf6RyWLf9kt2///////5Cpk/8bliz/mM+g//3+/f/9/v3//f79//3+
        /f/9/v3//f79//3+/f/e4t//GIco/xuWLP8bliz/brx5////////////fqGD/xuWLP8bliz/G5Ys/8/p
        0//9/f3/JXkx/xuWLP8bliz/HJYt/xtTIugdUR/hHJcu/2O4cP//////j6mT/xqWLP8jmjT/Kp07/yqd
        O/8qnTv/Kp07/yqdO/8qnTv/Kp07/yicOf8aliz/GpYs/xqWLP9tvHn///////////9+oYP/GpYs/xqW
        LP8aliz/z+nT//39/f8keTD/GpYs/xqWLf8cly7/HVEf4R5RH9IcmC//Ybhv//////+Vp5f/IXcu/yB3
        Lf8gdy3/Hncs/x53LP8ediv/HXYq/x12Kv8ddir/HHYq/xt1Kf8ZdCf/GpYt/228ef///////////4Ca
        hP8ddir/Hncr/yB4Lf/R49P//f39/yN5MP8Zli3/GZct/xyYL/8eUR/SGkcbuR6ZMf9dt2z///////7+
        /v/9/f3//f39//39/f/9/f3//f39//39/f/8/Pz//Pz8//z8/P/8/Pz//Pz8/7m9uv8alSz/bb15////
        /////////v7+//z8/P/9/f3//f39///////9/f3/Inkw/xmXLf8YmC3/Hpkx/xpHG7kSNBSXI5s1/zCj
        RP/G5sz/0OrU/9Lr1v/T69f/1OvY/9Xs2P/V7Nn/1ezZ/9Xs2f/V7Nn/1ezZ/9Xs2f/V7Nn/n8Ck/xmW
        Lf9tvXn////////////o7+n/1ezZ/9Tr2P/S69b/0OrU/7HZt/8cky//GJct/xeYLf8jmzX/EjIUlwQY
        BGoolzf/Fpku/xeYLf8Zly3/GZct/xmXLf8Zly3/GZct/xmXLf8Zly3/GZct/xmXLf8Zly3/GZct/xmX
        Lf8Zly3/GZct/2y9ef///////////36ig/8Zly3/GZct/xmXLf8Zly3/GZct/xmXLf8XmC3/Fpku/yiX
        N/8EGARqAAoALyV7L/8VmS//Fpgu/xiXLv8Yly7/GJcu/xiXLv8Yly7/GJcu/xiXLv8Yly7/GJcu/xiX
        Lv8Yly7/GJcu/xiXLv8Yly7/bL16////////////fqGE/xiXLv8Yly7/GJcu/xiXLv8Yly7/GJcu/xaY
        Lv8VmS//JXsv/wALAC4AAAACHFgj3xibMf8UmS7/F5gt/xiYLf8YmC3/GJgt/xiYLf8YmC3/GJgt/xiY
        Lf8YmC3/GJgt/xiYLf8YmC3/GJgt/xiWLf+dzqX///////////+stK3/FXwm/xiYLf8YmC3/GJgt/xiY
        Lf8XmC3/FJku/xibMf8cWCPfAAAAAgAAAAAKKAp+J5c5/xOaLv8WmC3/F5gt/xeYLf8XmC3/F5gt/xeY
        Lf8XmC3/F5gt/xeYLf8XmC3/M5xF/3Ghef+JrI//xdHH///////////////////////Nzs3/jKKQ/3CY
        d/8zdT//F5Ys/xaYLf8Tmi7/J5c5/wooCn4AAAAAAAAAAAAOABIfXyPrGJ0z/xKbLv8UmS7/Fpgt/xeY
        Lf8XmC3/F5gt/xeYLf8XmC3/F5gt/xuaMf/l8+j////////////////////////////+//7/////////
        /////////////+/v7/8bdi3/Epsu/xidM/8fXyPrAA4AEgAAAAAAAAAAAAAAAAUiBVkqgDX+FJ0x/xCc
        L/8Smy7/E5ku/xSZLf8VmC3/Fpgt/xaYLf8WmC3/Gpow/+Xz5//////////////////d8OD/aLt3/124
        bf/W7dv//v/+////////////7/Xw/xuRNf8UnTH/KoA1/gUiBVkAAAAAAAAAAAAAAAAAAAAAAAAAAAov
        DHwqgjb+Fp4z/w+cMP8PnDD/D5wv/xCbL/8Rmi//EZov/xGbL/8Rmy//MKhK/2nBff9dvHL/PK1V/xOc
        MP8Rmy//EZov/xKbMP80q0//XLxy/2rBfv80q1D/Fp4z/yqCNv4KLwx8AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAUmCFwjaSftJ508/xOfMv8OnS//Dp0v/w6dL/8OnS//Dp0v/w6dL/8OnS//Dp0v/w6d
        L/8OnS//Dp0v/w6dL/8OnS//Dp0v/w6dL/8OnS//E58y/yedPP8jaSftBSYIXAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMABUNOQ+EIWQp5CiKNv8ooD7/HqI5/xWgNP8SnzL/EJ8x/w+f
        Mf8PnzH/D58x/w+fMf8QnzH/Ep8y/xWgNP8eojn/KKA+/yiKNv8hZCnkDTkPhAAMABUAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADABwANggzCHIbTxygI2InwiZn
        K9smbyrqJHAr9CdzK/Yncyv2JHAr9CZvKuomZyvbI2InwhtPHKAIMwhyABwANgAAAAMAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/gAAf/gAAB/wAAAP4AAAB8AAAAOAAAABgAAAAQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAA
        AAGAAAABwAAAA+AAAAfwAAAP+AAAH/4AAH8=
</value>
  </data>
</root>